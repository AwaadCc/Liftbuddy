{"ast":null,"code":"/*!\n    localForage -- Offline Storage, Improved\n    Version 1.4.3\n    https://mozilla.github.io/localForage\n    (c) 2013-2016 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(2);\n      /* istanbul ignore next */\n\n\n      function INTERNAL() {}\n\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = exports = Promise;\n\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n\n        var promise = new this.constructor(INTERNAL);\n\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n\n        return promise;\n      };\n\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n\n        var thenable = result.value;\n\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n\n        return self;\n      };\n\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n\n        return self;\n      };\n\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n\n        if (obj && typeof obj === 'object' && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n\n        function onError(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.reject(self, value);\n        }\n\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.resolve(self, value);\n        }\n\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n\n        var result = tryCatch(tryToUnwrap);\n\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n\n      function tryCatch(func, value) {\n        var out = {};\n\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n\n        return out;\n      }\n\n      exports.resolve = resolve;\n\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n\n      exports.reject = reject;\n\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n\n      exports.all = all;\n\n      function all(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n\n        return promise;\n\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n\n      exports.race = race;\n\n      function race(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n\n        return promise;\n\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"2\": 2\n    }],\n    2: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n\n            scheduleDrain = function () {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n\n            scheduleDrain = function () {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function () {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function () {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = []; //named nextTick for less confusing stack traces\n\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n\n            while (++i < len) {\n              oldQueue[i]();\n            }\n\n            len = queue.length;\n          }\n\n          draining = false;\n        }\n\n        module.exports = immediate;\n\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(1);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"1\": 1\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {}\n      }\n\n      var idb = getIDB();\n\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb) {\n            return false;\n          } // We mimic PouchDB here; just UA test for Safari (which, as of\n          // iOS 8/Yosemite, doesn't properly support IndexedDB).\n          // IndexedDB support is broken and different from Blink's.\n          // This is faster than the test case (and it's sync), so we just\n          // do this. *SIGH*\n          // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n\n\n          if (typeof openDatabase !== 'undefined' && typeof navigator !== 'undefined' && navigator.userAgent && /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)) {\n            return false;\n          }\n\n          return idb && typeof idb.open === 'function' && // Some Samsung/HTC Android 4.0-4.3 devices\n          // have older IndexedDB specs; if this isn't available\n          // their IndexedDB is too old for us to use.\n          // (Replaces the onupgradeneeded test.)\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      }\n\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      } // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n\n\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n\n          return builder.getBlob(properties.type);\n        }\n      } // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n\n\n      if (typeof Promise === 'undefined' && typeof _dereq_ !== 'undefined') {\n        _dereq_(3);\n      }\n\n      var Promise$1 = Promise;\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      } // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs;\n      var dbContexts;\n      var toString = Object.prototype.toString; // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n\n        return buf;\n      } //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/9c25a23/src/adapters/idb/blobSupport.js\n      //\n\n\n      function _checkBlobSupportWithoutCaching(txn) {\n        return new Promise$1(function (resolve) {\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Create a deferred object representing the current database operation.\n\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve) {\n          deferredOperation.resolve = resolve;\n        }); // Enqueue the deferred operation.\n\n        dbContext.deferredOperations.push(deferredOperation); // Chain its promise to the database readiness.\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          var dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          var openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n\n              try {\n                db.createObjectStore(dbInfo.storeName);\n\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function () {\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function () {\n            resolve(openreq.result);\n\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          } // Align the versions to prevent errors.\n\n\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } // encode a blob for indexeddb engines that don't support blobs\n\n\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n\n          reader.readAsBinaryString(blob);\n        });\n      } // decode an encoded blob\n\n\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      } // is this one of our fancy encoded blobs?\n\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      } // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n\n\n      function _fullyReady(callback) {\n        var self = this;\n\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      } // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        } // Initialize a singleton container for all running localForages.\n\n\n        if (!dbContexts) {\n          dbContexts = {};\n        } // Get the current context of the database;\n\n\n        var dbContext = dbContexts[dbInfo.name]; // ...or create a new context.\n\n        if (!dbContext) {\n          dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n          }; // Register the new context in the global container.\n\n          dbContexts[dbInfo.name] = dbContext;\n        } // Register itself as a running localForage in the current context.\n\n\n        dbContext.forages.push(self); // Replace the default `ready()` function with the specialized one.\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        } // Create an array of initialization states of the related localForages.\n\n\n        var initPromises = [];\n\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        } // Take a snapshot of the related localForages.\n\n\n        var forages = dbContext.forages.slice(0); // Initialize the connection process only when\n        // all the related localForages aren't pending.\n\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db; // Get the connection or open a new one without upgrade.\n\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo; // Share the final connection amongst related localForages.\n\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function getItem(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n              var value = req.result;\n\n              if (value === undefined) {\n                value = null;\n              }\n\n              if (_isEncodedBlob(value)) {\n                value = _decodeBlob(value);\n              }\n\n              resolve(value);\n            };\n\n            req.onerror = function () {\n              reject(req.error);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items stored in database.\n\n\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n              var cursor = req.result;\n\n              if (cursor) {\n                var value = cursor.value;\n\n                if (_isEncodedBlob(value)) {\n                  value = _decodeBlob(value);\n                }\n\n                var result = iterator(value, cursor.key, iterationNumber++);\n\n                if (result !== void 0) {\n                  resolve(result);\n                } else {\n                  cursor[\"continue\"]();\n                }\n              } else {\n                resolve();\n              }\n            };\n\n            req.onerror = function () {\n              reject(req.error);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem(key, value, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n\n                return _encodeBlob(value);\n              });\n            }\n\n            return value;\n          }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName); // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n\n            if (value === null) {\n              value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n              // Cast to undefined so the value passed to\n              // callback/promise is the same as what one would get out\n              // of `getItem()` later. This leads to some weirdness\n              // (setItem('foo', undefined) will return `null`), but\n              // it's not my fault localStorage is our baseline and that\n              // it's weird.\n              if (value === undefined) {\n                value = null;\n              }\n\n              resolve(value);\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n              var err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n\n            var req = store.put(value, key);\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName); // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n\n            var req = store[\"delete\"](key);\n\n            transaction.oncomplete = function () {\n              resolve();\n            };\n\n            transaction.onerror = function () {\n              reject(req.error);\n            }; // The request will be also be aborted if we've exceeded our storage\n            // space.\n\n\n            transaction.onabort = function () {\n              var err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n              resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n              var err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n              resolve(req.result);\n            };\n\n            req.onerror = function () {\n              reject(req.error);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var advanced = false;\n            var req = store.openCursor();\n\n            req.onsuccess = function () {\n              var cursor = req.result;\n\n              if (!cursor) {\n                // this means there weren't enough keys\n                resolve(null);\n                return;\n              }\n\n              if (n === 0) {\n                // We have the first key, return it if that's what they\n                // wanted.\n                resolve(cursor.key);\n              } else {\n                if (!advanced) {\n                  // Otherwise, ask the cursor to skip ahead n\n                  // records.\n                  advanced = true;\n                  cursor.advance(n);\n                } else {\n                  // When we get here, we've got the nth key.\n                  resolve(cursor.key);\n                }\n              }\n            };\n\n            req.onerror = function () {\n              reject(req.error);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n              var cursor = req.result;\n\n              if (!cursor) {\n                resolve(keys);\n                return;\n              }\n\n              keys.push(cursor.key);\n              cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n              reject(req.error);\n            };\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys\n      }; // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length; // OMG the serializations!\n\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n          /*jslint bitwise: true */\n\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n\n        return buffer;\n      } // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n\n\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n\n        return base64String;\n      } // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n\n\n      function serialize(value, callback) {\n        var valueType = '';\n\n        if (value) {\n          valueType = toString$1.call(value);\n        } // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n\n\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      } // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n\n\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        } // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n\n\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType; // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n\n        var buffer = stringToBuffer(serializedString); // Return the right type based on the code/type set during\n        // serialization.\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n      // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          } // Create our key/value table if it doesn't exist.\n\n\n          dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          });\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n\n      function getItem$1(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null; // Check to see if this is serialized content we need to\n                // unpack.\n\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value; // Check to see if this is serialized content\n                  // we need to unpack.\n\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n\n                  result = iterator(result, item.key, i + 1); // void(0) prevents problems with redefinition\n                  // of `undefined`.\n\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem$1(key, value, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            } // Save the original value to pass to the callback.\n\n\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // TODO: Try to re-run the transaction.\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem$1(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n\n\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n\n\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n\n\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1\n      }; // Config the localStorage backend, using options set in the config.\n\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = dbInfo.name + '/';\n\n        if (dbInfo.storeName !== self._defaultConfig.storeName) {\n          dbInfo.keyPrefix += dbInfo.storeName + '/';\n        }\n\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      } // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n\n\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n\n\n      function getItem$2(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key); // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items in the store.\n\n\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length; // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\n          var iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n\n            var value = localStorage.getItem(key); // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Same as localStorage's key() method, except takes a callback.\n\n\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          } // Remove the prefix from the key, if a key is found.\n\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n\n          for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n          }\n\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Supply the number of keys in the datastore to the callback function.\n\n\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Remove an item from the store, nice and simple.\n\n\n      function removeItem$2(key, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n\n\n      function setItem$2(key, value, callback) {\n        var self = this; // Cast the key to a string, as that's all we can set as a key.\n\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          } // Save the original value to pass to the callback.\n\n\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        // Default API, from Gaia/localStorage.\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2\n      }; // Custom drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n\n      var CustomDrivers = {};\n      var DriverType = {\n        INDEXEDDB: 'asyncStorage',\n        LOCALSTORAGE: 'localStorageWrapper',\n        WEBSQL: 'webSQLStorage'\n      };\n      var DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n      var driverSupport = {}; // Check to see if IndexedDB is available and if it is the latest\n      // implementation; it's our preferred backend library. We use \"_spec_test\"\n      // as the name of the database because it's not the one we'll operate on,\n      // but it's useful to make sure its using the right spec.\n      // See: https://github.com/mozilla/localForage/issues/128\n\n      driverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n      driverSupport[DriverType.WEBSQL] = isWebSQLValid();\n      driverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      };\n\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n\n          if (arg) {\n            for (var key in arg) {\n              if (arg.hasOwnProperty(key)) {\n                if (isArray(arg[key])) {\n                  arguments[0][key] = arg[key].slice();\n                } else {\n                  arguments[0][key] = arg[key];\n                }\n              }\n            }\n          }\n        }\n\n        return arguments[0];\n      }\n\n      function isLibraryDriver(driverName) {\n        for (var driver in DriverType) {\n          if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n\n          this.INDEXEDDB = DriverType.INDEXEDDB;\n          this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n          this.WEBSQL = DriverType.WEBSQL;\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n\n          this._wrapLibraryMethodsWithReady();\n\n          this.setDriver(this._config.driver);\n        } // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n\n              this._config[i] = options[i];\n            } // after all config options are set and\n            // the driver option is used, try setting it\n\n\n            if ('driver' in options && options.driver) {\n              this.setDriver(this._config.driver);\n            }\n\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        }; // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n              var namingError = new Error('Custom driver name already in use: ' + driverObject._driver); // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n\n              if (isLibraryDriver(driverObject._driver)) {\n                reject(namingError);\n                return;\n              }\n\n              var customDriverMethods = LibraryMethods.concat('_initStorage');\n\n              for (var i = 0; i < customDriverMethods.length; i++) {\n                var customDriverMethod = customDriverMethods[i];\n\n                if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n\n              var supportPromise = Promise$1.resolve(true);\n\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  supportPromise = driverObject._support();\n                } else {\n                  supportPromise = Promise$1.resolve(!!driverObject._support);\n                }\n              }\n\n              supportPromise.then(function (supportResult) {\n                driverSupport[driverName] = supportResult;\n                CustomDrivers[driverName] = driverObject;\n                resolve();\n              }, reject);\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var self = this;\n          var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n              switch (driverName) {\n                case self.INDEXEDDB:\n                  return asyncStorage;\n\n                case self.LOCALSTORAGE:\n                  return localStorageWrapper;\n\n                case self.WEBSQL:\n                  return webSQLStorage;\n              }\n            } else if (CustomDrivers[driverName]) {\n              return CustomDrivers[driverName];\n            } else {\n              throw new Error('Driver not found.');\n            }\n          });\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n\n            return self._ready;\n          });\n\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(function (driver) {\n                    self._extend(driver);\n\n                    setDriverToConfig();\n                    self._ready = self._initStorage(self._config);\n                    return self._ready;\n                  })[\"catch\"](driverPromiseLoop);\n                }\n\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n\n              return driverPromiseLoop();\n            };\n          } // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n\n\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n\n              self._wrapLibraryMethodsWithReady();\n\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!driverSupport[driverName];\n        };\n\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n\n          return supportedDrivers;\n        };\n\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n\n        return LocalForage;\n      }(); // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","map":{"version":3,"names":["f","exports","module","define","amd","g","window","global","self","localforage","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","queue","outcome","safelyResolveThenable","prototype","onRejected","then","onFulfilled","promise","constructor","unwrap","push","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","resolve","reject","func","returnValue","result","tryCatch","getThen","status","thenable","len","error","obj","appyThen","apply","arguments","called","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","draining","oldQueue","task","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","openDatabase","navigator","userAgent","test","open","IDBKeyRange","isWebSQLValid","isLocalStorageValid","localStorage","setItem","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_getConnection","upgradeNeeded","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","console","warn","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_initStorage","options","forages","ready","initPromises","ignoreErrors","j","forage","slice","_defaultConfig","k","getItem","key","String","store","transaction","req","get","undefined","iterate","openCursor","iterationNumber","cursor","blobSupport","err","removeItem","clear","count","advanced","advance","keys","asyncStorage","_driver","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","indexOf","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","_initStorage$1","dbInfoPromise","description","size","executeSql","serializer","getItem$1","results","rows","item","iterate$1","setItem$1","originalValue","sqlError","QUOTA_ERR","removeItem$1","clear$1","length$1","c","key$1","keys$1","webSQLStorage","_initStorage$2","keyPrefix","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","length$2","removeItem$2","setItem$2","localStorageWrapper","CustomDrivers","DriverType","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","driver","driverSupport","isArray","arg","callWhenReady","localForageInstance","libraryMethod","_args","extend","hasOwnProperty","isLibraryDriver","driverName","LocalForage","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","config","replace","defineDriver","driverObject","complianceError","namingError","customDriverMethods","concat","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","initDriver","currentDriverIndex","driverPromiseLoop","_extend","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"sources":["/Users/awaadchaudhry/Desktop/Coding/Projects/Liftbuddy/node_modules/localforage/dist/localforage.js"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.4.3\n    https://mozilla.github.io/localForage\n    (c) 2013-2016 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(2);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"2\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(1);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"1\":1}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here; just UA test for Safari (which, as of\n        // iOS 8/Yosemite, doesn't properly support IndexedDB).\n        // IndexedDB support is broken and different from Blink's.\n        // This is faster than the test case (and it's sync), so we just\n        // do this. *SIGH*\n        // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        if (typeof openDatabase !== 'undefined' && typeof navigator !== 'undefined' && navigator.userAgent && /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)) {\n            return false;\n        }\n\n        return idb && typeof idb.open === 'function' &&\n        // Some Samsung/HTC Android 4.0-4.3 devices\n        // have older IndexedDB specs; if this isn't available\n        // their IndexedDB is too old for us to use.\n        // (Replaces the onupgradeneeded test.)\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined' && typeof _dereq_ !== 'undefined') {\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/9c25a23/src/adapters/idb/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(txn) {\n    return new Promise$1(function (resolve) {\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function () {\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n\n            var req = store.put(value, key);\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // TODO: Try to re-run the transaction.\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver);\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(function (driver) {\n                            self._extend(driver);\n                            setDriverToConfig();\n\n                            self._ready = self._initStorage(self._config);\n                            return self._ready;\n                        })[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}